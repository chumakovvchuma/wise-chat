{"version":3,"sources":["components/SignupPage.js","components/Login.js","components/ChatRoom.js","components/ChatPage.js","components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["SignupPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","evt","console","log","target","name","value","setState","error","validateEmail","prevState","newUser","objectSpread","defineProperty","validEmail","state","test","onChangeUsername","axios","get","concat","then","res","data","message","usernameAvailable","catch","handleSubmit","preventDefault","username","email","password","user","uid","post","changeStateHandler","handleLogin","handleClickShowPassword","showPassword","signup","bind","assertThisInitialized","_this2","react_default","a","createElement","Container","component","maxWidth","CssBaseline","style","marginTop","className","color","textAlign","onSubmit","Grid","container","spacing","item","xs","sm","TextField","id","type","variant","label","fullWidth","required","autoFocus","margin","e","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","fontSize","onClick","VisibilityOff","Visibility","Button","justify","Link","href","React","Component","LoginPage","validateUser","localStorage","setItem","token","getItem","handleSignup","react_router","to","components_SignupPage","ChatRoom","personalMessages","generalMessages","messages","filter","el","username2","undefined","personalChatRoom","map","Paper","padding","marginLeft","borderRadius","width","fontFamily","fontWeight","wordBreak","status","smile","frown","meh","ChatPage","handleChange","handleSend","socket","emit","showEmojiPicker","handleDrawerToggle","mobileOpen","changeLogoutStateHandler","removeItem","disconnect","loggedin","onClickHandler","addEmoji","emoji","native","handleMart","response","socketIOClient","query","on","users","window","scrollTo","document","body","scrollHeight","_this3","_this$props","classes","drawer","toolbar","Divider","List","ListItem","button","selected","ListItemIcon","Avatar","ListItemText","primary","key","root","AppBar","appBar","Toolbar","edge","menuButton","Menu_default","Typography","noWrap","flexGrow","Hidden","smUp","implementation","Drawer","open","onClose","paper","drawerPaper","ModalProps","keepMounted","xsDown","content","chatroom_new","chatroom","components_ChatRoom","float","clear","ref","messagesEnd","root_input","root_input_inner","iconButton","InputBase","input","placeholder","inputProps","divider","Send_default","dist_es","set","search","onSelect","root_input_emoji","height","overflow","withStyles","theme","display","breakpoints","up","flexShrink","backgroundColor","marginRight","mixins","flexDirection","bottom","right","left","drawerWidth","top","background","paddingBottom","emojiPicker","HomePage","components_ChatPage","App","react_router_dom","exact","path","render","components_HomePage","Login","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6986de60.chunk.js","sourcesContent":["import React from 'react';\nimport { TextField, InputAdornment, IconButton } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n\nclass SignupPage extends React.Component { \n   \n    constructor(props){\n        super(props)\n        this.state={          \n          newUser:{\n            username:'',\n            name:'',\n            email:'',\n            password:''\n        },\n        usernameAvailable:true,\n        validEmail:false,\n        error:''\n        }\n        this.handleSubmit=this.handleSubmit.bind(this);\n    }\n    onChange=(evt)=>{\n        console.log(evt.target.name,evt.target.value)\n        let value = evt.target.value;\n        let name = evt.target.name; \n        this.setState({error:''})\n        if(name===\"email\"){\n          if(this.validateEmail(value)){\n            this.setState( prevState => {\n              return { \n                newUser : {\n                          ...prevState.newUser, [name]: value\n                        },\n                validEmail:true\n              }\n          }, () => console.log(this.state.newUser)\n          ) \n          }\n          else{\n            this.setState({validEmail:false,error:'Invalid email'})\n          }\n        }\n        else{ \n          this.setState( prevState => {\n              return { \n                newUser : {\n                          ...prevState.newUser, [name]: value\n                        }\n              }\n          }, () => console.log(this.state.newUser)\n          ) \n        }\n\n    }\n    validateEmail=(name) =>{\n      var re = /^\\w+@\\w+\\.\\w+$/;\n      if(re.test(name)){\n        return true\n      }\n      return false\n    }\n    \n    onChangeUsername=(evt)=>{\n        console.log(evt.target.name,evt.target.value)\n        let value = evt.target.value;\n        let name = evt.target.name; \n        this.setState({error:''})\n        this.setState( prevState => {\n            return { \n               newUser : {\n                        ...prevState.newUser, [name]: value\n                       }\n            }\n         }, () => console.log(this.state.newUser)\n         )\n         \n        axios.get(`https://wise-chat.herokuapp.com/users/${value}`)\n        .then(res => {\n          console.log(res); \n          if(res.data.message===\"User exists\"){\n              this.setState({usernameAvailable:false})\n              console.log(\"User name already taken\")\n          }\n          else{\n              this.setState({usernameAvailable:true})\n              console.log(\"Available\")\n          } \n        })\n        .catch(error=>{\n            console.log(error)                       \n        }) \n    }\n\n    handleSubmit= (evt)=>{\n        evt.preventDefault();\n        const username= this.state.newUser.username;\n        const name=this.state.newUser.name;\n        const email=this.state.newUser.email;\n        const password= this.state.newUser.password;\n        \n        const user = {\n            username: username,\n            name:name,\n            uid:email,\n            password:password,\n          };\n        console.log(username,name,email,password,this.state.usernameAvailable,this.state.validEmail)\n        if(username && name && email && password ){\n          if(this.state.usernameAvailable && this.state.validEmail){\n            axios.post(`https://wise-chat.herokuapp.com/signUp`,  user )\n            .then(res => {\n            console.log(res);\n            console.log(res.data);            \n            this.props.changeStateHandler();\n            this.setState({error:''})            \n            })\n            .catch(error=>{\n                this.setState({error:'Invalid entries'})\n                console.log(error)\n            })\n          }\n          else{\n            if(!this.state.usernameAvailable){\n              this.setState({error:'Username already taken'}) \n            }            \n            else{\n              this.setState({error:'Invalid Email'})\n            }\n          }\n        }\n        else{\n            this.setState({error:'Fields cannot be empty'})\n            console.log(\"Fields cannot be empty\")\n        }\n       \n    }\n    handleLogin = () =>{\n        this.props.changeStateHandler();\n    }\n    handleClickShowPassword = () =>{\n        this.setState(state=>({showPassword : !state.showPassword}));\n    }\n    changeStateHandler =()=>{\n        this.setState({signup:false})\n    }\n\n    render() {\n        return (  \n            <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n              <div style={{marginTop: 50}}>\n              \n              <h1 className=\"font\">\n                Sign up\n              </h1>\n              {this.state.error && <div style={{color:'red',textAlign:'center'}}>{this.state.error}</div>}\n              <form onSubmit={(evt)=>this.handleSubmit(evt)}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={12}>\n                    <TextField\n                        id=\"input\" type=\"text\"\n                        variant=\"outlined\"\n                        name=\"username\"\n                        label=\"Username\"\n                        fullWidth\n                        required\n                        autoFocus\n                        margin=\"normal\"                         \n                        onChange={e=>{this.onChangeUsername(e)}}  \n                        InputProps={{\n                            endAdornment:(\n                                <InputAdornment  position=\"end\">\n                                    <IconButton\n                                        aria-label=\"Valid name\"\n                                            >\n                                        {this.state.newUser.username?\n                                          this.state.usernameAvailable ? \n                                            <i className=\"material-icons\" style={{fontSize:'30px', marginTop:'auto',color: 'green'}}>\n                                                check\n                                            </i> : \n                                            <i className=\"material-icons\" style={{fontSize:'30px', marginTop:'auto',color: 'red'}}>\n                                                close\n                                            </i>:<i></i>}\n                                    </IconButton>\n                                </InputAdornment>\n                            )\n                          }}                      \n                    />\n                  </Grid>                 \n                  \n                  <Grid item xs={12} sm={12}>\n                    <TextField\n                        id=\"input\" type=\"text\"\n                        variant=\"outlined\"\n                        name=\"name\"\n                        label=\"Name\"\n                        fullWidth\n                        required\n                        margin=\"normal\"                         \n                        onChange={e=>{this.onChange(e)}}                                                                       \n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={12}>\n                    <TextField\n                        id=\"input\" type=\"email\"\n                        variant=\"outlined\"\n                        name=\"email\"\n                        label=\"Email\"\n                        fullWidth\n                        required\n                        margin=\"normal\"                                                 \n                        onChange={e=>{this.onChange(e)}} \n                        InputProps={{\n                          endAdornment:(\n                              <InputAdornment  position=\"end\">\n                                  <IconButton\n                                      aria-label=\"Valid email\"                                      \n                                          >\n                                      {this.state.newUser.email?\n                                        (this.state.validEmail ? \n                                          <i className=\"material-icons\" style={{fontSize:'30px', marginTop:'auto',color: 'green'}}>\n                                              check\n                                          </i> : \n                                          <i className=\"material-icons\" style={{fontSize:'30px', marginTop:'auto',color: 'red'}}>\n                                              close\n                                          </i>):<i></i>}\n                                  </IconButton>\n                              </InputAdornment>\n                          )\n                        }}                               \n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={12}>\n                  <TextField\n                        id=\"filled-adornment-password\" \n                        name=\"password\"\n                        label=\"Password\"\n                        fullWidth\n                        required\n                        margin=\"normal\"\n                        type={this.state.showPassword ? 'text':'password'}\n                        variant=\"outlined\"\n                        onChange={e=>{this.onChange(e)}}\n                        InputProps={{\n                            endAdornment:(\n                                <InputAdornment  position=\"end\">\n                                    <IconButton\n                                        aria-label=\"Toggle password visibility\"\n                                        onClick={this.handleClickShowPassword}\n                                            >\n                                        {this.state.showPassword ? <VisibilityOff/> : <Visibility/>}\n                                    </IconButton>\n                                </InputAdornment>\n                            )\n                        }}\n                    />\n                    </Grid> \n                    \n                                    \n                </Grid>\n                <br/>\n                <br/>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"                  \n                  onClick = {this.handleSubmit}\n                >\n                  Sign Up\n                </Button>\n                <br/>\n                <br/>\n                <Grid container justify=\"flex-end\">\n                  <Grid item>\n                    <Link href=\"#\" variant=\"body2\" onClick={this.handleLogin}>\n                      Already have an account? Log in\n                    </Link>\n                  </Grid>\n                </Grid>\n              </form>\n            </div>\n          </Container>\n    );\n  }\n}\n\n\nexport default SignupPage;","import React, {Component} from 'react';\nimport SignupPage from './SignupPage'\nimport {  TextField, InputAdornment, IconButton } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport {Redirect} from \"react-router-dom\";\nclass LoginPage extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n          signup: false,\n          email:'',\n          password:'',\n          error: ''\n        }\n        this.handleSubmit=this.handleSubmit.bind(this);\n    }\n\n    onChange=(evt)=>{\n        this.setState({error:''})\n        this.setState({\n            [evt.target.name]:evt.target.value \n        })\n    }\n\n    handleSubmit= (evt)=>{\n        evt.preventDefault();\n        const email= this.state.email;\n        const password= this.state.password; \n        console.log(email,password)       \n        this.validateUser(email,password);  \n    }\n    \n    handleClickShowPassword = () =>{\n        this.setState(state=>({showPassword : !state.showPassword}));\n    }\n\n    validateUser = (email,password) => {\n        console.log(email,password)\n        const user = {\n            uid: email,\n            password:password\n          };\n        if(email && password){\n          axios.post(\"https://wise-chat.herokuapp.com/signIn\",  user )\n            .then(res => {\n              console.log(res);\n              console.log(res.data);\n              localStorage.setItem(\"username\",res.data.token.username);\n              localStorage.setItem(\"uid\",res.data.token.uid);\n              localStorage.setItem(\"name\",res.data.token.name);\n              console.log(\"Validating\",localStorage.getItem('username'));           \n              this.setState({error:''})\n            })\n            .catch(error=>{\n                this.setState({error:'Invalid credentials'})\n                console.log(error)\n            }                \n            )\n        }\n        else{\n            this.setState({error:'Fields cannot be empty'})\n            console.log(\"Empty not allowed\")\n        }\n    }\n    \n    handleSignup = () =>{\n        this.setState({signup:true})\n    }\n    changeStateHandler =()=>{\n        this.setState({error:''})\n        this.setState({signup:false})\n    }\n    render() {  \n        console.log(\"login page\")\n        if(localStorage.getItem('username')){\n            return(\n                <div>\n                    <Redirect to = \"/\"/>\n                </div>\n            )\n        }\n        else if(!this.state.signup){        \n            return( \n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <div style={{marginTop: 50}} >\n                        \n                        <h1 className=\"font\">\n                        Let's ChitChat\n                        </h1>\n                        {this.state.error && <div style={{color:'red',textAlign:'center'}}>{this.state.error}</div>} \n                        <form onSubmit={(evt)=>this.handleSubmit(evt)} >\n                        <TextField\n                            id=\"input-with-icon-adornment\" type=\"text\"\n                            variant=\"outlined\"\n                            name=\"email\"\n                            label=\"Email\"\n                            fullWidth\n                            required\n                            autoFocus\n                            margin=\"normal\"  \n                            onChange={e=>{this.onChange(e)}}                            \n                        />\n                        <TextField\n                            id=\"filled-adornment-password\" \n                            name=\"password\"\n                            label=\"Password\"\n                            fullWidth\n                            required\n                            margin=\"normal\"\n                            type={this.state.showPassword ? 'text':'password'}\n                            variant=\"outlined\"\n                            onChange={e=>{this.onChange(e)}}\n                            InputProps={{\n                                endAdornment:(\n                                    <InputAdornment  position=\"end\">\n                                        <IconButton\n                                            aria-label=\"Toggle password visibility\"\n                                            onClick={this.handleClickShowPassword}\n                                                >\n                                            {this.state.showPassword ? <VisibilityOff/> : <Visibility/>}\n                                        </IconButton>\n                                    </InputAdornment>\n                                )\n                            }}\n                        />\n                        \n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={this.handleSubmit}\n                        >\n                            LogIn\n                        </Button>\n                        <br/>\n                        <br/>\n                        <Grid container justify=\"flex-end\">\n                            <div >\n                            <Grid item >\n                            <Link href=\"#\" variant=\"body2\" onClick = {this.handleSignup}>\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                            </Grid> \n                            </div>                          \n                        </Grid>\n                        </form>\n                    </div>                    \n                    </Container>                    \n            )\n        }        \n        else{\n            return(\n                <SignupPage changeStateHandler={this.changeStateHandler}/>\n            )\n        }   \n}\n}\n\n\nexport default LoginPage","import React from 'react';\nimport { Smile, Frown, Meh } from 'react-feather';\nimport Paper from '@material-ui/core/Paper';\nconst ChatRoom=(props)=>{\n\nvar personalMessages=[];\nvar generalMessages=[];\n\nif(props.messages){\n    personalMessages = props.messages.filter(el => {\n        if ((el.username2 === props.username2 && el.username===localStorage.getItem('username')) || (el.username===props.username2 && el.username2=== localStorage.getItem('username'))) {\n            return el;\n        }\n    })\n    console.log(\"personalMessages\", personalMessages);\n\n    generalMessages = props.messages.filter(el => {\n        if (el.username2 === undefined) {\n            return el\n        }\n    })\n    console.log('generalMessages', generalMessages);\n}\n\nif(props.personalChatRoom && personalMessages[0]!==undefined){\n    return (\n        <div >\n            {personalMessages.map(el=>{\n                return <Paper style={{padding: '3px',marginLeft:el.username===localStorage.getItem('username')?'auto':'',borderRadius: '20px', width: 'fit-content'}}>\n                    <div  style={{padding : '3px',margin : 3, textAlign:el.username===localStorage.getItem('username')?'right':'left'}}>\n                    <span style={{fontFamily: 'Josefin Sans', color: 'crimson',fontWeight: 'bold'}}>{el.username}</span>\n                    <br/>\n                    <span style={{fontSize: '18px',wordBreak: 'break-all'}}>{el.message}</span> <span style={{color: 'crimson'}}>{el.status===\"positive\"?<Smile/>:el.status===\"negative\"?<Frown/>:<Meh/>}</span></div>                    \n                </Paper>\n            })}\n        </div>\n    )\n}\nelse if (!props.personalChatRoom && generalMessages[0] !== undefined){\n    return (\n        <div >\n            {generalMessages.map(el => {\n                return <Paper style={{padding: '3px', marginLeft:el.username===localStorage.getItem('username')?'auto':'',borderRadius: '20px', width: 'fit-content'}}>\n                    <div  style={{padding : '3px',margin : 3,textAlign:el.username===localStorage.getItem('username')?'right':'left'}}>\n                    <span style={{fontFamily: 'Josefin Sans', color: 'dodgerblue',fontWeight: 'bold'}}>{el.username}</span>\n                    <br/>\n                    <span style={{fontSize: '18px',wordBreak: 'break-all'}}>{el.message}</span> <span style={{color: 'dodgerblue'}}>{el.status===\"positive\"?<Smile/>:el.status===\"negative\"?<Frown/>:<Meh/>}</span></div>                        \n                </Paper>\n            })}\n        </div>\n    )\n\n}\nelse{\n    return (\n            <div >\n                Let's Chitchat !!\n            </div>\n    )}\n}\n\nexport default ChatRoom;","// @ts-nocheck\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport SendIcon from '@material-ui/icons/Send';\nimport Avatar from '@material-ui/core/Avatar';\nimport { withStyles  } from '@material-ui/core/styles';\nimport 'emoji-mart/css/emoji-mart.css';\nimport { Picker } from 'emoji-mart';\nimport {Redirect} from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport socketIOClient from \"socket.io-client\";\nimport ChatRoom from './ChatRoom';\nimport Grid from '@material-ui/core/Grid';\nconst drawerWidth = 240;\n\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n      backgroundColor: 'aliceblue'\n    },\n  },\n  appBar: {\n    flexGrow:1,\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  root_input: {\n    flexGrow: 1,\n    padding: '2px 4px',\n    display: 'flex',\n    flexDirection: 'row',\n    position: 'fixed',\n    bottom: '10px',  \n    right:'2px',\n    [theme.breakpoints.up('sm')]: {\n      left: `${drawerWidth+2}px`,\n    },\n       \n  },\n  root_input_inner: {\n    flexGrow: 1,\n    padding: '2px 2px',\n    display: 'flex',\n    flexDirection: 'row',\n    borderRadius: '25px' ,\n    width:'auto',\n    margin:'20px'\n  },\n  root_input_emoji:{\n    flexGrow: 1,\n    position: 'fixed',\n    top: '500px',\n    background:'black' ,\n    backgroundColor:'black',\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth+2}px)`,\n    }\n  },\n  input: {\n    display: 'flex',\n    flexDirection: 'row',\n    width:'80%'\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4,\n  },\n  chatroom:{\n    paddingBottom:'100px'\n  },\n  chatroom_new:{\n    paddingBottom:'300px'\n  },\n  emojiPicker:{\n      width: '100%'\n  }\n});\n\nclass ChatPage extends Component{\n    constructor(props){\n      super(props);\n      this.state={\n        mobileOpen:false,\n        loggedin:true,\n        response:[],\n        message:'',\n        messages:[],\n        socket:null,\n        username2:'',\n        personalChatRoom: false,\n        showEmojiPicker:false\n      }\n    }\n    \n    handleChange=(evt)=>{\n      this.setState({\n        message:evt.target.value \n    })\n    }\n    handleSend=(evt)=>{\n      evt.preventDefault();\n      if(this.state.personalChatRoom){\n        this.state.socket.emit('personalMessage', {\n          username2: this.state.username2,\n          username: localStorage.getItem('username'),\n          uid: localStorage.getItem('uid'),\n          message: this.state.message\n        });\n\n      }else{\n        this.state.socket.emit('message', {\n          username: localStorage.getItem('username'),\n          uid: localStorage.getItem('uid'),\n          message: this.state.message\n        });\n      }\n      this.setState({message:''})\n      if(this.state.showEmojiPicker){\n        this.setState({showEmojiPicker:!this.state.showEmojiPicker});\n      }\n    }\n    componentDidMount(){ \n      const endpoint = \"https://wise-chat.herokuapp.com/\";\n      const socket = socketIOClient(endpoint,{\n      query:'username='+localStorage.getItem('username')+'&uid='+localStorage.getItem('uid')});\n      console.log(\"socket\",socket)\n      socket.on(\"updateUsersList\", users =>{\n        // console.log(\"data\", users);\n        this.setState({ response: users });\n      }\n      )\n      socket.on('message', message=>{\n        this.setState({\n          messages:this.state.messages.concat(message)\n        })}\n      )\n      socket.on('personalMessage', message => {\n        this.setState({\n          messages: this.state.messages.concat(message)\n        })\n      }\n      )\n        this.setState({socket})\n      }\n      \n    componentDidUpdate(){\n      window.scrollTo(0,document.body.scrollHeight);\n    }\n    handleDrawerToggle=() =>{\n      this.setState({mobileOpen:!this.state.mobileOpen});\n    }\n    changeLogoutStateHandler=()=>{\n      localStorage.removeItem('username')\n      localStorage.removeItem('uid')\n      localStorage.removeItem('name')\n      this.state.socket.emit(\"disconnect\")\n      this.state.socket.disconnect()\n      this.setState({loggedin:false})        \n    }\n\n    onClickHandler=(username)=>{\n        this.setState({ username2: username, personalChatRoom: true });\n        if(this.state.mobileOpen){\n          this.setState({mobileOpen:!this.state.mobileOpen});\n        }\n    }\n\n    addEmoji = (e) => {\n      let emoji=e.native;      \n      this.setState({message : this.state.message + emoji}) \n     \n    }\n    handleMart=()=>{      \n      this.setState({showEmojiPicker:!this.state.showEmojiPicker})\n    }\n\n    render(){\n      const { classes,container } = this.props;\n      const drawer = (\n        <div>\n          <div className={classes.toolbar} />\n          <div style={{fontFamily: 'Josefin Sans', color: 'navy', fontWeight: 'bold', fontSize:'20px'}}>\n            Hello {localStorage.getItem('username')}</div>\n          <Divider />\n          <List >\n            <ListItem button selected={this.state.username2===''?true:false} \n                onClick={() => {this.setState({personalChatRoom: false, username2:''})\n                          if(this.state.mobileOpen){\n                            this.setState({mobileOpen:!this.state.mobileOpen});\n                          }}}>\n              <ListItemIcon>\n                <Avatar>\n                  <i className=\"material-icons\" style={{ color: 'darkblue' }}>\n                    group\n                        </i>\n                </Avatar>\n              </ListItemIcon>\n              <ListItemText primary=\"ChatRoom\"/>\n            </ListItem>\n            {\n              this.state.response.map(el=>{\n                if(el!==localStorage.getItem('username')){\n                return(\n                  <ListItem button selected={this.state.username2===el?true:false} key={el} value={el} \n                    onClick={()=>this.onClickHandler(el)}>\n                    <ListItemIcon>\n                      <Avatar>\n                        <i className=\"material-icons\" style={{color:'darkblue'}}>\n                          person\n                        </i>\n                      </Avatar>\n                    </ListItemIcon>\n                    <ListItemText primary={el} />\n                  </ListItem>\n                )\n                }\n              })\n              }\n          </List>\n          <Divider />          \n        </div>\n      );\n    if(this.state.loggedin){\n      return(\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar position=\"fixed\" className={classes.appBar} color=\"secondary\">\n            <Toolbar>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Open drawer\"\n                edge=\"start\"\n                onClick={this.handleDrawerToggle}\n                className={classes.menuButton}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" noWrap style={{flexGrow:1,fontFamily:'Josefin Sans',fontSize:'24px',fontWeight:'bold'}}>\n                {this.state.username2?this.state.username2:\"Group\"}\n              </Typography>\n                <Button color=\"inherit\" onClick={this.changeLogoutStateHandler}>Logout</Button>\n            </Toolbar>\n          </AppBar>\n          <nav className={classes.drawer} aria-label=\"Mailbox folders\">\n            <Hidden smUp implementation=\"css\">\n              <Drawer\n                container={container}\n                variant=\"temporary\"\n                open={this.state.mobileOpen}\n                onClose={this.handleDrawerToggle}\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                ModalProps={{\n                  keepMounted: true, \n                }}\n              >\n                {drawer}\n              </Drawer>\n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n              <Drawer\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                variant=\"permanent\"\n                open\n              >\n                {drawer}\n              </Drawer>\n            </Hidden>\n          </nav>\n\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <div className={this.state.showEmojiPicker?classes.chatroom_new:classes.chatroom}> \n            <ChatRoom personalChatRoom={this.state.personalChatRoom}\n            username2={this.state.username2}\n            messages={this.state.messages} />\n            <div style={{ float:\"left\", clear: \"both\" }}\n             ref={(el) => { this.messagesEnd = el; }}>\n            </div>\n          </div>\n            <div className={classes.root_input}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={12}>\n                  <form onSubmit={this.handleSend}>\n                  <Paper className={classes.root_input_inner}>\n                  <IconButton className={classes.iconButton} aria-label=\"Menu\">\n                  <i className=\"material-icons\" onClick={this.handleMart}>\n                    tag_faces\n                  </i>                  \n                  </IconButton>\n                  <InputBase\n                    className={classes.input}                    \n                    placeholder=\"Type your message...\"\n                    inputProps={{ 'aria-label': 'Type message' }}\n                    onChange={this.handleChange}\n                    value={this.state.message}\n                  />\n                  <Divider className={classes.divider} />\n                  <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"Directions\" onClick={this.handleSend}>\n                    <SendIcon />\n                  </IconButton>  \n                  </Paper>              \n                  </form>\n                </Grid>\n                <Grid item xs={12} sm={12}>  \n                {this.state.showEmojiPicker ? (\n                  <Picker set=\"emojione\" search={false} onSelect={this.addEmoji} \n                    className={classes.root_input_emoji} style={{width:'100%',height: '250px', overflow: 'hidden'}} />\n                    ) : null}\n                </Grid>\n              </Grid>              \n            </div>\n        </main>\n        </div>\n      )\n    }\n    else{\n      return(\n        <div>\n            <Redirect to = \"/login\"/>\n        </div>\n    )}\n  }\n}\n\nChatPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n  container: PropTypes.object\n};\n\nexport default withStyles(styles)(ChatPage);\n","import React,{Component} from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport ChatPage from './ChatPage';\n\nclass HomePage extends Component{\n    render(){\n        if(localStorage.getItem(\"username\")){\n            return(\n                <div>\n                    <ChatPage/>\n                </div>\n            )\n        }else{\n            return(\n                <div>\n                    <Redirect to = \"/login\"/>\n                </div>\n            )\n        }\n    }\n}\nexport default HomePage;","import React from 'react';\nimport { BrowserRouter as Router, Switch,Route} from 'react-router-dom';\nimport './App.css';\nimport LoginPage from './components/Login';\nimport HomePage from './components/HomePage';\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>                    \n            <Route exact path=\"/\" \n                    render={(props) => <HomePage />}/>\n            <Route path='/login'\n                    render={(props) => <LoginPage />}/>                                \n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}