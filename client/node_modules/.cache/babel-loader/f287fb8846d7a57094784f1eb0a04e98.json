{"ast":null,"code":"var _jsxFileName = \"/Users/victorchumakov/Documents/wice-chat/ChitChat/client/src/components/ChatPage.js\";\n// @ts-nocheck\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport SendIcon from '@material-ui/icons/Send';\nimport Avatar from '@material-ui/core/Avatar';\nimport { withStyles } from '@material-ui/core/styles';\nimport 'emoji-mart/css/emoji-mart.css';\nimport { Picker } from 'emoji-mart';\nimport { Redirect } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport socketIOClient from \"socket.io-client\";\nimport ChatRoom from './ChatRoom';\nimport Grid from '@material-ui/core/Grid';\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n      backgroundColor: 'aliceblue'\n    }\n  },\n  appBar: {\n    flexGrow: 1,\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: \"calc(100% - \".concat(drawerWidth, \"px)\")\n    }\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  root_input: {\n    flexGrow: 1,\n    padding: '2px 4px',\n    display: 'flex',\n    flexDirection: 'row',\n    position: 'fixed',\n    bottom: '10px',\n    right: '2px',\n    [theme.breakpoints.up('sm')]: {\n      left: \"\".concat(drawerWidth + 2, \"px\")\n    }\n  },\n  root_input_inner: {\n    flexGrow: 1,\n    padding: '2px 2px',\n    display: 'flex',\n    flexDirection: 'row',\n    borderRadius: '25px',\n    width: 'auto',\n    margin: '20px'\n  },\n  root_input_emoji: {\n    flexGrow: 1,\n    position: 'fixed',\n    top: '500px',\n    background: 'black',\n    backgroundColor: 'black',\n    [theme.breakpoints.up('sm')]: {\n      width: \"calc(100% - \".concat(drawerWidth + 2, \"px)\")\n    }\n  },\n  input: {\n    display: 'flex',\n    flexDirection: 'row',\n    width: '80%'\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  },\n  chatroom: {\n    paddingBottom: '100px'\n  },\n  chatroom_new: {\n    paddingBottom: '300px'\n  },\n  emojiPicker: {\n    width: '100%'\n  }\n});\n\nclass ChatPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = evt => {\n      this.setState({\n        message: evt.target.value\n      });\n    };\n\n    this.handleSend = evt => {\n      evt.preventDefault();\n\n      if (this.state.personalChatRoom) {\n        this.state.socket.emit('personalMessage', {\n          username2: this.state.username2,\n          username: localStorage.getItem('username'),\n          uid: localStorage.getItem('uid'),\n          message: this.state.message\n        });\n      } else {\n        this.state.socket.emit('message', {\n          username: localStorage.getItem('username'),\n          uid: localStorage.getItem('uid'),\n          message: this.state.message\n        });\n      }\n\n      this.setState({\n        message: ''\n      });\n\n      if (this.state.showEmojiPicker) {\n        this.setState({\n          showEmojiPicker: !this.state.showEmojiPicker\n        });\n      }\n    };\n\n    this.handleDrawerToggle = () => {\n      this.setState({\n        mobileOpen: !this.state.mobileOpen\n      });\n    };\n\n    this.changeLogoutStateHandler = () => {\n      localStorage.removeItem('username');\n      localStorage.removeItem('uid');\n      localStorage.removeItem('name');\n      this.state.socket.emit(\"disconnect\");\n      this.state.socket.disconnect();\n      this.setState({\n        loggedin: false\n      });\n    };\n\n    this.onClickHandler = username => {\n      this.setState({\n        username2: username,\n        personalChatRoom: true\n      });\n\n      if (this.state.mobileOpen) {\n        this.setState({\n          mobileOpen: !this.state.mobileOpen\n        });\n      }\n    };\n\n    this.addEmoji = e => {\n      let emoji = e.native;\n      this.setState({\n        message: this.state.message + emoji\n      });\n    };\n\n    this.handleMart = () => {\n      this.setState({\n        showEmojiPicker: !this.state.showEmojiPicker\n      });\n    };\n\n    this.state = {\n      mobileOpen: false,\n      loggedin: true,\n      response: [],\n      message: '',\n      messages: [],\n      socket: null,\n      username2: '',\n      personalChatRoom: false,\n      showEmojiPicker: false\n    };\n  }\n\n  componentDidMount() {\n    const endpoint = \"https://wise-chat.herokuapp.com/\";\n    const socket = socketIOClient(endpoint, {\n      query: 'username=' + localStorage.getItem('username') + '&uid=' + localStorage.getItem('uid')\n    });\n    console.log(\"socket\", socket);\n    socket.on(\"updateUsersList\", users => {\n      // console.log(\"data\", users);\n      this.setState({\n        response: users\n      });\n    });\n    socket.on('message', message => {\n      this.setState({\n        messages: this.state.messages.concat(message)\n      });\n    });\n    socket.on('personalMessage', message => {\n      this.setState({\n        messages: this.state.messages.concat(message)\n      });\n    });\n    this.setState({\n      socket\n    });\n  }\n\n  componentDidUpdate() {\n    window.scrollTo(0, document.body.scrollHeight);\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          container = _this$props.container;\n    const drawer = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.toolbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Josefin Sans',\n        color: 'navy',\n        fontWeight: 'bold',\n        fontSize: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Hello \", localStorage.getItem('username')), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      selected: this.state.username2 === '' ? true : false,\n      onClick: () => {\n        this.setState({\n          personalChatRoom: false,\n          username2: ''\n        });\n\n        if (this.state.mobileOpen) {\n          this.setState({\n            mobileOpen: !this.state.mobileOpen\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      style: {\n        color: 'darkblue'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"group\"))), React.createElement(ListItemText, {\n      primary: \"ChatRoom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    })), this.state.response.map(el => {\n      if (el !== localStorage.getItem('username')) {\n        return React.createElement(ListItem, {\n          button: true,\n          selected: this.state.username2 === el ? true : false,\n          key: el,\n          value: el,\n          onClick: () => this.onClickHandler(el),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, React.createElement(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"material-icons\",\n          style: {\n            color: 'darkblue'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, \"person\"))), React.createElement(ListItemText, {\n          primary: el,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }));\n      }\n    })), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }));\n\n    if (this.state.loggedin) {\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }), React.createElement(AppBar, {\n        position: \"fixed\",\n        className: classes.appBar,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"Open drawer\",\n        edge: \"start\",\n        onClick: this.handleDrawerToggle,\n        className: classes.menuButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(MenuIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        variant: \"h6\",\n        noWrap: true,\n        style: {\n          flexGrow: 1,\n          fontFamily: 'Josefin Sans',\n          fontSize: '24px',\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, this.state.username2 ? this.state.username2 : \"Group\"), React.createElement(Button, {\n        color: \"inherit\",\n        onClick: this.changeLogoutStateHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"Logout\"))), React.createElement(\"nav\", {\n        className: classes.drawer,\n        \"aria-label\": \"Mailbox folders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(Hidden, {\n        smUp: true,\n        implementation: \"css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(Drawer, {\n        container: container,\n        variant: \"temporary\",\n        open: this.state.mobileOpen,\n        onClose: this.handleDrawerToggle,\n        classes: {\n          paper: classes.drawerPaper\n        },\n        ModalProps: {\n          keepMounted: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, drawer)), React.createElement(Hidden, {\n        xsDown: true,\n        implementation: \"css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(Drawer, {\n        classes: {\n          paper: classes.drawerPaper\n        },\n        variant: \"permanent\",\n        open: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, drawer))), React.createElement(\"main\", {\n        className: classes.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.toolbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: this.state.showEmojiPicker ? classes.chatroom_new : classes.chatroom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(ChatRoom, {\n        personalChatRoom: this.state.personalChatRoom,\n        username2: this.state.username2,\n        messages: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          float: \"left\",\n          clear: \"both\"\n        },\n        ref: el => {\n          this.messagesEnd = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: classes.root_input,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.root_input_inner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: classes.iconButton,\n        \"aria-label\": \"Menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        onClick: this.handleMart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"tag_faces\")), React.createElement(InputBase, {\n        className: classes.input,\n        placeholder: \"Type your message...\",\n        inputProps: {\n          'aria-label': 'Type message'\n        },\n        onChange: this.handleChange,\n        value: this.state.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        className: classes.divider,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }), React.createElement(IconButton, {\n        color: \"primary\",\n        className: classes.iconButton,\n        \"aria-label\": \"Directions\",\n        onClick: this.handleSend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(SendIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }))))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, this.state.showEmojiPicker ? React.createElement(Picker, {\n        set: \"emojione\",\n        search: false,\n        onSelect: this.addEmoji,\n        className: classes.root_input_emoji,\n        style: {\n          width: '100%',\n          height: '250px',\n          overflow: 'hidden'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }) : null)))));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nChatPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n  container: PropTypes.object\n};\nexport default withStyles(styles)(ChatPage);","map":{"version":3,"sources":["/Users/victorchumakov/Documents/wice-chat/ChitChat/client/src/components/ChatPage.js"],"names":["React","Component","PropTypes","AppBar","CssBaseline","Divider","Drawer","Hidden","IconButton","List","ListItem","ListItemIcon","ListItemText","MenuIcon","Toolbar","Typography","Paper","InputBase","SendIcon","Avatar","withStyles","Picker","Redirect","Button","socketIOClient","ChatRoom","Grid","drawerWidth","styles","theme","root","display","drawer","breakpoints","up","width","flexShrink","backgroundColor","appBar","flexGrow","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","padding","root_input","flexDirection","position","bottom","right","left","root_input_inner","borderRadius","margin","root_input_emoji","top","background","input","iconButton","divider","height","chatroom","paddingBottom","chatroom_new","emojiPicker","ChatPage","constructor","props","handleChange","evt","setState","message","target","value","handleSend","preventDefault","state","personalChatRoom","socket","emit","username2","username","localStorage","getItem","uid","showEmojiPicker","handleDrawerToggle","mobileOpen","changeLogoutStateHandler","removeItem","disconnect","loggedin","onClickHandler","addEmoji","e","emoji","native","handleMart","response","messages","componentDidMount","endpoint","query","console","log","on","users","concat","componentDidUpdate","window","scrollTo","document","body","scrollHeight","render","classes","container","fontFamily","color","fontWeight","fontSize","map","el","paper","keepMounted","float","clear","messagesEnd","overflow","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport SendIcon from '@material-ui/icons/Send';\nimport Avatar from '@material-ui/core/Avatar';\nimport { withStyles  } from '@material-ui/core/styles';\nimport 'emoji-mart/css/emoji-mart.css';\nimport { Picker } from 'emoji-mart';\nimport {Redirect} from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport socketIOClient from \"socket.io-client\";\nimport ChatRoom from './ChatRoom';\nimport Grid from '@material-ui/core/Grid';\nconst drawerWidth = 240;\n\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n      backgroundColor: 'aliceblue'\n    },\n  },\n  appBar: {\n    flexGrow:1,\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  root_input: {\n    flexGrow: 1,\n    padding: '2px 4px',\n    display: 'flex',\n    flexDirection: 'row',\n    position: 'fixed',\n    bottom: '10px',  \n    right:'2px',\n    [theme.breakpoints.up('sm')]: {\n      left: `${drawerWidth+2}px`,\n    },\n       \n  },\n  root_input_inner: {\n    flexGrow: 1,\n    padding: '2px 2px',\n    display: 'flex',\n    flexDirection: 'row',\n    borderRadius: '25px' ,\n    width:'auto',\n    margin:'20px'\n  },\n  root_input_emoji:{\n    flexGrow: 1,\n    position: 'fixed',\n    top: '500px',\n    background:'black' ,\n    backgroundColor:'black',\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth+2}px)`,\n    }\n  },\n  input: {\n    display: 'flex',\n    flexDirection: 'row',\n    width:'80%'\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4,\n  },\n  chatroom:{\n    paddingBottom:'100px'\n  },\n  chatroom_new:{\n    paddingBottom:'300px'\n  },\n  emojiPicker:{\n      width: '100%'\n  }\n});\n\nclass ChatPage extends Component{\n    constructor(props){\n      super(props);\n      this.state={\n        mobileOpen:false,\n        loggedin:true,\n        response:[],\n        message:'',\n        messages:[],\n        socket:null,\n        username2:'',\n        personalChatRoom: false,\n        showEmojiPicker:false\n      }\n    }\n    \n    handleChange=(evt)=>{\n      this.setState({\n        message:evt.target.value \n    })\n    }\n    handleSend=(evt)=>{\n      evt.preventDefault();\n      if(this.state.personalChatRoom){\n        this.state.socket.emit('personalMessage', {\n          username2: this.state.username2,\n          username: localStorage.getItem('username'),\n          uid: localStorage.getItem('uid'),\n          message: this.state.message\n        });\n\n      }else{\n        this.state.socket.emit('message', {\n          username: localStorage.getItem('username'),\n          uid: localStorage.getItem('uid'),\n          message: this.state.message\n        });\n      }\n      this.setState({message:''})\n      if(this.state.showEmojiPicker){\n        this.setState({showEmojiPicker:!this.state.showEmojiPicker});\n      }\n    }\n    componentDidMount(){ \n      const endpoint = \"https://wise-chat.herokuapp.com/\";\n      const socket = socketIOClient(endpoint,{\n      query:'username='+localStorage.getItem('username')+'&uid='+localStorage.getItem('uid')});\n      console.log(\"socket\",socket)\n      socket.on(\"updateUsersList\", users =>{\n        // console.log(\"data\", users);\n        this.setState({ response: users });\n      }\n      )\n      socket.on('message', message=>{\n        this.setState({\n          messages:this.state.messages.concat(message)\n        })}\n      )\n      socket.on('personalMessage', message => {\n        this.setState({\n          messages: this.state.messages.concat(message)\n        })\n      }\n      )\n        this.setState({socket})\n      }\n      \n    componentDidUpdate(){\n      window.scrollTo(0,document.body.scrollHeight);\n    }\n    handleDrawerToggle=() =>{\n      this.setState({mobileOpen:!this.state.mobileOpen});\n    }\n    changeLogoutStateHandler=()=>{\n      localStorage.removeItem('username')\n      localStorage.removeItem('uid')\n      localStorage.removeItem('name')\n      this.state.socket.emit(\"disconnect\")\n      this.state.socket.disconnect()\n      this.setState({loggedin:false})        \n    }\n\n    onClickHandler=(username)=>{\n        this.setState({ username2: username, personalChatRoom: true });\n        if(this.state.mobileOpen){\n          this.setState({mobileOpen:!this.state.mobileOpen});\n        }\n    }\n\n    addEmoji = (e) => {\n      let emoji=e.native;      \n      this.setState({message : this.state.message + emoji}) \n     \n    }\n    handleMart=()=>{      \n      this.setState({showEmojiPicker:!this.state.showEmojiPicker})\n    }\n\n    render(){\n      const { classes,container } = this.props;\n      const drawer = (\n        <div>\n          <div className={classes.toolbar} />\n          <div style={{fontFamily: 'Josefin Sans', color: 'navy', fontWeight: 'bold', fontSize:'20px'}}>\n            Hello {localStorage.getItem('username')}</div>\n          <Divider />\n          <List >\n            <ListItem button selected={this.state.username2===''?true:false} \n                onClick={() => {this.setState({personalChatRoom: false, username2:''})\n                          if(this.state.mobileOpen){\n                            this.setState({mobileOpen:!this.state.mobileOpen});\n                          }}}>\n              <ListItemIcon>\n                <Avatar>\n                  <i className=\"material-icons\" style={{ color: 'darkblue' }}>\n                    group\n                        </i>\n                </Avatar>\n              </ListItemIcon>\n              <ListItemText primary=\"ChatRoom\"/>\n            </ListItem>\n            {\n              this.state.response.map(el=>{\n                if(el!==localStorage.getItem('username')){\n                return(\n                  <ListItem button selected={this.state.username2===el?true:false} key={el} value={el} \n                    onClick={()=>this.onClickHandler(el)}>\n                    <ListItemIcon>\n                      <Avatar>\n                        <i className=\"material-icons\" style={{color:'darkblue'}}>\n                          person\n                        </i>\n                      </Avatar>\n                    </ListItemIcon>\n                    <ListItemText primary={el} />\n                  </ListItem>\n                )\n                }\n              })\n              }\n          </List>\n          <Divider />          \n        </div>\n      );\n    if(this.state.loggedin){\n      return(\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar position=\"fixed\" className={classes.appBar} color=\"secondary\">\n            <Toolbar>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Open drawer\"\n                edge=\"start\"\n                onClick={this.handleDrawerToggle}\n                className={classes.menuButton}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" noWrap style={{flexGrow:1,fontFamily:'Josefin Sans',fontSize:'24px',fontWeight:'bold'}}>\n                {this.state.username2?this.state.username2:\"Group\"}\n              </Typography>\n                <Button color=\"inherit\" onClick={this.changeLogoutStateHandler}>Logout</Button>\n            </Toolbar>\n          </AppBar>\n          <nav className={classes.drawer} aria-label=\"Mailbox folders\">\n            <Hidden smUp implementation=\"css\">\n              <Drawer\n                container={container}\n                variant=\"temporary\"\n                open={this.state.mobileOpen}\n                onClose={this.handleDrawerToggle}\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                ModalProps={{\n                  keepMounted: true, \n                }}\n              >\n                {drawer}\n              </Drawer>\n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n              <Drawer\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                variant=\"permanent\"\n                open\n              >\n                {drawer}\n              </Drawer>\n            </Hidden>\n          </nav>\n\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <div className={this.state.showEmojiPicker?classes.chatroom_new:classes.chatroom}> \n            <ChatRoom personalChatRoom={this.state.personalChatRoom}\n            username2={this.state.username2}\n            messages={this.state.messages} />\n            <div style={{ float:\"left\", clear: \"both\" }}\n             ref={(el) => { this.messagesEnd = el; }}>\n            </div>\n          </div>\n            <div className={classes.root_input}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={12}>\n                  <form onSubmit={this.handleSend}>\n                  <Paper className={classes.root_input_inner}>\n                  <IconButton className={classes.iconButton} aria-label=\"Menu\">\n                  <i className=\"material-icons\" onClick={this.handleMart}>\n                    tag_faces\n                  </i>                  \n                  </IconButton>\n                  <InputBase\n                    className={classes.input}                    \n                    placeholder=\"Type your message...\"\n                    inputProps={{ 'aria-label': 'Type message' }}\n                    onChange={this.handleChange}\n                    value={this.state.message}\n                  />\n                  <Divider className={classes.divider} />\n                  <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"Directions\" onClick={this.handleSend}>\n                    <SendIcon />\n                  </IconButton>  \n                  </Paper>              \n                  </form>\n                </Grid>\n                <Grid item xs={12} sm={12}>  \n                {this.state.showEmojiPicker ? (\n                  <Picker set=\"emojione\" search={false} onSelect={this.addEmoji} \n                    className={classes.root_input_emoji} style={{width:'100%',height: '250px', overflow: 'hidden'}} />\n                    ) : null}\n                </Grid>\n              </Grid>              \n            </div>\n        </main>\n        </div>\n      )\n    }\n    else{\n      return(\n        <div>\n            <Redirect to = \"/login\"/>\n        </div>\n    )}\n  }\n}\n\nChatPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n  container: PropTypes.object\n};\n\nexport default withStyles(styles)(ChatPage);\n"]},"metadata":{},"sourceType":"module"}