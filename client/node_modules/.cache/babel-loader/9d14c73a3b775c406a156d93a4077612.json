{"ast":null,"code":"import _objectSpread from \"/Users/victorchumakov/Documents/wice-chat/ChitChat/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/victorchumakov/Documents/wice-chat/ChitChat/client/src/components/SignupPage.js\";\nimport React from 'react';\nimport { TextField, InputAdornment, IconButton } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n\nclass SignupPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = evt => {\n      console.log(evt.target.name, evt.target.value);\n      let value = evt.target.value;\n      let name = evt.target.name;\n      this.setState({\n        error: ''\n      });\n\n      if (name === \"email\") {\n        if (this.validateEmail(value)) {\n          this.setState(prevState => {\n            return {\n              newUser: _objectSpread({}, prevState.newUser, {\n                [name]: value\n              }),\n              validEmail: true\n            };\n          }, () => console.log(this.state.newUser));\n        } else {\n          this.setState({\n            validEmail: false,\n            error: 'Invalid email'\n          });\n        }\n      } else {\n        this.setState(prevState => {\n          return {\n            newUser: _objectSpread({}, prevState.newUser, {\n              [name]: value\n            })\n          };\n        }, () => console.log(this.state.newUser));\n      }\n    };\n\n    this.validateEmail = name => {\n      var re = /^\\w+@\\w+\\.\\w+$/;\n\n      if (re.test(name)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.onChangeUsername = evt => {\n      console.log(evt.target.name, evt.target.value);\n      let value = evt.target.value;\n      let name = evt.target.name;\n      this.setState({\n        error: ''\n      });\n      this.setState(prevState => {\n        return {\n          newUser: _objectSpread({}, prevState.newUser, {\n            [name]: value\n          })\n        };\n      }, () => console.log(this.state.newUser));\n      axios.get(\"https://wise-chat.herokuapp.com/users/\".concat(value)).then(res => {\n        console.log(res);\n\n        if (res.data.message === \"User exists\") {\n          this.setState({\n            usernameAvailable: false\n          });\n          console.log(\"User name already taken\");\n        } else {\n          this.setState({\n            usernameAvailable: true\n          });\n          console.log(\"Available\");\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleSubmit = evt => {\n      evt.preventDefault();\n      const username = this.state.newUser.username;\n      const name = this.state.newUser.name;\n      const email = this.state.newUser.email;\n      const password = this.state.newUser.password;\n      const user = {\n        username: username,\n        name: name,\n        uid: email,\n        password: password\n      };\n      console.log(username, name, email, password, this.state.usernameAvailable, this.state.validEmail);\n\n      if (username && name && email && password) {\n        if (this.state.usernameAvailable && this.state.validEmail) {\n          axios.post(\"https://wise-chat.herokuapp.com/signUp\", user).then(res => {\n            console.log(res);\n            console.log(res.data);\n            this.props.changeStateHandler();\n            this.setState({\n              error: ''\n            });\n          }).catch(error => {\n            this.setState({\n              error: 'Invalid entries'\n            });\n            console.log(error);\n          });\n        } else {\n          if (!this.state.usernameAvailable) {\n            this.setState({\n              error: 'Username already taken'\n            });\n          } else {\n            this.setState({\n              error: 'Invalid Email'\n            });\n          }\n        }\n      } else {\n        this.setState({\n          error: 'Fields cannot be empty'\n        });\n        console.log(\"Fields cannot be empty\");\n      }\n    };\n\n    this.handleLogin = () => {\n      this.props.changeStateHandler();\n    };\n\n    this.handleClickShowPassword = () => {\n      this.setState(state => ({\n        showPassword: !state.showPassword\n      }));\n    };\n\n    this.changeStateHandler = () => {\n      this.setState({\n        signup: false\n      });\n    };\n\n    this.state = {\n      newUser: {\n        username: '',\n        name: '',\n        email: '',\n        password: ''\n      },\n      usernameAvailable: true,\n      validEmail: false,\n      error: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"font\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Sign up\"), this.state.error && React.createElement(\"div\", {\n      style: {\n        color: 'red',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, this.state.error), React.createElement(\"form\", {\n      onSubmit: evt => this.handleSubmit(evt),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"input\",\n      type: \"text\",\n      variant: \"outlined\",\n      name: \"username\",\n      label: \"Username\",\n      fullWidth: true,\n      required: true,\n      autoFocus: true,\n      margin: \"normal\",\n      onChange: e => {\n        this.onChangeUsername(e);\n      },\n      InputProps: {\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Valid name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, this.state.newUser.username ? this.state.usernameAvailable ? React.createElement(\"i\", {\n          className: \"material-icons\",\n          style: {\n            fontSize: '30px',\n            marginTop: 'auto',\n            color: 'green'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, \"check\") : React.createElement(\"i\", {\n          className: \"material-icons\",\n          style: {\n            fontSize: '30px',\n            marginTop: 'auto',\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, \"close\") : React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        })))\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"input\",\n      type: \"text\",\n      variant: \"outlined\",\n      name: \"name\",\n      label: \"Name\",\n      fullWidth: true,\n      required: true,\n      margin: \"normal\",\n      onChange: e => {\n        this.onChange(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"input\",\n      type: \"email\",\n      variant: \"outlined\",\n      name: \"email\",\n      label: \"Email\",\n      fullWidth: true,\n      required: true,\n      margin: \"normal\",\n      onChange: e => {\n        this.onChange(e);\n      },\n      InputProps: {\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Valid email\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, this.state.newUser.email ? this.state.validEmail ? React.createElement(\"i\", {\n          className: \"material-icons\",\n          style: {\n            fontSize: '30px',\n            marginTop: 'auto',\n            color: 'green'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, \"check\") : React.createElement(\"i\", {\n          className: \"material-icons\",\n          style: {\n            fontSize: '30px',\n            marginTop: 'auto',\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, \"close\") : React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        })))\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"filled-adornment-password\",\n      name: \"password\",\n      label: \"Password\",\n      fullWidth: true,\n      required: true,\n      margin: \"normal\",\n      type: this.state.showPassword ? 'text' : 'password',\n      variant: \"outlined\",\n      onChange: e => {\n        this.onChange(e);\n      },\n      InputProps: {\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Toggle password visibility\",\n          onClick: this.handleClickShowPassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }, this.state.showPassword ? React.createElement(VisibilityOff, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }) : React.createElement(Visibility, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        })))\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"#\",\n      variant: \"body2\",\n      onClick: this.handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Already have an account? Log in\"))))));\n  }\n\n}\n\nexport default SignupPage;","map":{"version":3,"sources":["/Users/victorchumakov/Documents/wice-chat/ChitChat/client/src/components/SignupPage.js"],"names":["React","TextField","InputAdornment","IconButton","Visibility","VisibilityOff","axios","Button","CssBaseline","Link","Grid","Container","SignupPage","Component","constructor","props","onChange","evt","console","log","target","name","value","setState","error","validateEmail","prevState","newUser","validEmail","state","re","test","onChangeUsername","get","then","res","data","message","usernameAvailable","catch","handleSubmit","preventDefault","username","email","password","user","uid","post","changeStateHandler","handleLogin","handleClickShowPassword","showPassword","signup","bind","render","marginTop","color","textAlign","e","endAdornment","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TextField, InputAdornment, IconButton } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n\nclass SignupPage extends React.Component { \n   \n    constructor(props){\n        super(props)\n        this.state={          \n          newUser:{\n            username:'',\n            name:'',\n            email:'',\n            password:''\n        },\n        usernameAvailable:true,\n        validEmail:false,\n        error:''\n        }\n        this.handleSubmit=this.handleSubmit.bind(this);\n    }\n    onChange=(evt)=>{\n        console.log(evt.target.name,evt.target.value)\n        let value = evt.target.value;\n        let name = evt.target.name; \n        this.setState({error:''})\n        if(name===\"email\"){\n          if(this.validateEmail(value)){\n            this.setState( prevState => {\n              return { \n                newUser : {\n                          ...prevState.newUser, [name]: value\n                        },\n                validEmail:true\n              }\n          }, () => console.log(this.state.newUser)\n          ) \n          }\n          else{\n            this.setState({validEmail:false,error:'Invalid email'})\n          }\n        }\n        else{ \n          this.setState( prevState => {\n              return { \n                newUser : {\n                          ...prevState.newUser, [name]: value\n                        }\n              }\n          }, () => console.log(this.state.newUser)\n          ) \n        }\n\n    }\n    validateEmail=(name) =>{\n      var re = /^\\w+@\\w+\\.\\w+$/;\n      if(re.test(name)){\n        return true\n      }\n      return false\n    }\n    \n    onChangeUsername=(evt)=>{\n        console.log(evt.target.name,evt.target.value)\n        let value = evt.target.value;\n        let name = evt.target.name; \n        this.setState({error:''})\n        this.setState( prevState => {\n            return { \n               newUser : {\n                        ...prevState.newUser, [name]: value\n                       }\n            }\n         }, () => console.log(this.state.newUser)\n         )\n         \n        axios.get(`https://wise-chat.herokuapp.com/users/${value}`)\n        .then(res => {\n          console.log(res); \n          if(res.data.message===\"User exists\"){\n              this.setState({usernameAvailable:false})\n              console.log(\"User name already taken\")\n          }\n          else{\n              this.setState({usernameAvailable:true})\n              console.log(\"Available\")\n          } \n        })\n        .catch(error=>{\n            console.log(error)                       \n        }) \n    }\n\n    handleSubmit= (evt)=>{\n        evt.preventDefault();\n        const username= this.state.newUser.username;\n        const name=this.state.newUser.name;\n        const email=this.state.newUser.email;\n        const password= this.state.newUser.password;\n        \n        const user = {\n            username: username,\n            name:name,\n            uid:email,\n            password:password,\n          };\n        console.log(username,name,email,password,this.state.usernameAvailable,this.state.validEmail)\n        if(username && name && email && password ){\n          if(this.state.usernameAvailable && this.state.validEmail){\n            axios.post(`https://wise-chat.herokuapp.com/signUp`,  user )\n            .then(res => {\n            console.log(res);\n            console.log(res.data);            \n            this.props.changeStateHandler();\n            this.setState({error:''})            \n            })\n            .catch(error=>{\n                this.setState({error:'Invalid entries'})\n                console.log(error)\n            })\n          }\n          else{\n            if(!this.state.usernameAvailable){\n              this.setState({error:'Username already taken'}) \n            }            \n            else{\n              this.setState({error:'Invalid Email'})\n            }\n          }\n        }\n        else{\n            this.setState({error:'Fields cannot be empty'})\n            console.log(\"Fields cannot be empty\")\n        }\n       \n    }\n    handleLogin = () =>{\n        this.props.changeStateHandler();\n    }\n    handleClickShowPassword = () =>{\n        this.setState(state=>({showPassword : !state.showPassword}));\n    }\n    changeStateHandler =()=>{\n        this.setState({signup:false})\n    }\n\n    render() {\n        return (  \n            <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n              <div style={{marginTop: 50}}>\n              \n              <h1 className=\"font\">\n                Sign up\n              </h1>\n              {this.state.error && <div style={{color:'red',textAlign:'center'}}>{this.state.error}</div>}\n              <form onSubmit={(evt)=>this.handleSubmit(evt)}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={12}>\n                    <TextField\n                        id=\"input\" type=\"text\"\n                        variant=\"outlined\"\n                        name=\"username\"\n                        label=\"Username\"\n                        fullWidth\n                        required\n                        autoFocus\n                        margin=\"normal\"                         \n                        onChange={e=>{this.onChangeUsername(e)}}  \n                        InputProps={{\n                            endAdornment:(\n                                <InputAdornment  position=\"end\">\n                                    <IconButton\n                                        aria-label=\"Valid name\"\n                                            >\n                                        {this.state.newUser.username?\n                                          this.state.usernameAvailable ? \n                                            <i className=\"material-icons\" style={{fontSize:'30px', marginTop:'auto',color: 'green'}}>\n                                                check\n                                            </i> : \n                                            <i className=\"material-icons\" style={{fontSize:'30px', marginTop:'auto',color: 'red'}}>\n                                                close\n                                            </i>:<i></i>}\n                                    </IconButton>\n                                </InputAdornment>\n                            )\n                          }}                      \n                    />\n                  </Grid>                 \n                  \n                  <Grid item xs={12} sm={12}>\n                    <TextField\n                        id=\"input\" type=\"text\"\n                        variant=\"outlined\"\n                        name=\"name\"\n                        label=\"Name\"\n                        fullWidth\n                        required\n                        margin=\"normal\"                         \n                        onChange={e=>{this.onChange(e)}}                                                                       \n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={12}>\n                    <TextField\n                        id=\"input\" type=\"email\"\n                        variant=\"outlined\"\n                        name=\"email\"\n                        label=\"Email\"\n                        fullWidth\n                        required\n                        margin=\"normal\"                                                 \n                        onChange={e=>{this.onChange(e)}} \n                        InputProps={{\n                          endAdornment:(\n                              <InputAdornment  position=\"end\">\n                                  <IconButton\n                                      aria-label=\"Valid email\"                                      \n                                          >\n                                      {this.state.newUser.email?\n                                        (this.state.validEmail ? \n                                          <i className=\"material-icons\" style={{fontSize:'30px', marginTop:'auto',color: 'green'}}>\n                                              check\n                                          </i> : \n                                          <i className=\"material-icons\" style={{fontSize:'30px', marginTop:'auto',color: 'red'}}>\n                                              close\n                                          </i>):<i></i>}\n                                  </IconButton>\n                              </InputAdornment>\n                          )\n                        }}                               \n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={12}>\n                  <TextField\n                        id=\"filled-adornment-password\" \n                        name=\"password\"\n                        label=\"Password\"\n                        fullWidth\n                        required\n                        margin=\"normal\"\n                        type={this.state.showPassword ? 'text':'password'}\n                        variant=\"outlined\"\n                        onChange={e=>{this.onChange(e)}}\n                        InputProps={{\n                            endAdornment:(\n                                <InputAdornment  position=\"end\">\n                                    <IconButton\n                                        aria-label=\"Toggle password visibility\"\n                                        onClick={this.handleClickShowPassword}\n                                            >\n                                        {this.state.showPassword ? <VisibilityOff/> : <Visibility/>}\n                                    </IconButton>\n                                </InputAdornment>\n                            )\n                        }}\n                    />\n                    </Grid> \n                    \n                                    \n                </Grid>\n                <br/>\n                <br/>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"                  \n                  onClick = {this.handleSubmit}\n                >\n                  Sign Up\n                </Button>\n                <br/>\n                <br/>\n                <Grid container justify=\"flex-end\">\n                  <Grid item>\n                    <Link href=\"#\" variant=\"body2\" onClick={this.handleLogin}>\n                      Already have an account? Log in\n                    </Link>\n                  </Grid>\n                </Grid>\n              </form>\n            </div>\n          </Container>\n    );\n  }\n}\n\n\nexport default SignupPage;"]},"metadata":{},"sourceType":"module"}