{"ast":null,"code":"var _jsxFileName = \"/Users/victorchumakov/Documents/wice-chat/ChitChat/client/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport SignupPage from './SignupPage';\nimport { TextField, InputAdornment, IconButton } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport { Redirect } from \"react-router-dom\";\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = evt => {\n      this.setState({\n        error: ''\n      });\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.handleSubmit = evt => {\n      evt.preventDefault();\n      const email = this.state.email;\n      const password = this.state.password;\n      console.log(email, password);\n      this.validateUser(email, password);\n    };\n\n    this.handleClickShowPassword = () => {\n      this.setState(state => ({\n        showPassword: !state.showPassword\n      }));\n    };\n\n    this.validateUser = (email, password) => {\n      console.log(email, password);\n      const user = {\n        uid: email,\n        password: password\n      };\n\n      if (email && password) {\n        axios.post(\"https://wise-chat.herokuapp.com/signIn\", user).then(res => {\n          console.log(res);\n          console.log(res.data);\n          localStorage.setItem(\"username\", res.data.token.username);\n          localStorage.setItem(\"uid\", res.data.token.uid);\n          localStorage.setItem(\"name\", res.data.token.name);\n          console.log(\"Validating\", localStorage.getItem('username'));\n          this.setState({\n            error: ''\n          });\n        }).catch(error => {\n          this.setState({\n            error: 'Invalid credentials'\n          });\n          console.log(error);\n        });\n      } else {\n        this.setState({\n          error: 'Fields cannot be empty'\n        });\n        console.log(\"Empty not allowed\");\n      }\n    };\n\n    this.handleSignup = () => {\n      this.setState({\n        signup: true\n      });\n    };\n\n    this.changeStateHandler = () => {\n      this.setState({\n        error: ''\n      });\n      this.setState({\n        signup: false\n      });\n    };\n\n    this.state = {\n      signup: false,\n      email: '',\n      password: '',\n      error: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    console.log(\"login page\");\n\n    if (localStorage.getItem('username')) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    } else if (!this.state.signup) {\n      return React.createElement(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          marginTop: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"font\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Let's ChitChat\"), this.state.error && React.createElement(\"div\", {\n        style: {\n          color: 'red',\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.state.error), React.createElement(\"form\", {\n        onSubmit: evt => this.handleSubmit(evt),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"input-with-icon-adornment\",\n        type: \"text\",\n        variant: \"outlined\",\n        name: \"email\",\n        label: \"Email\",\n        fullWidth: true,\n        required: true,\n        autoFocus: true,\n        margin: \"normal\",\n        onChange: e => {\n          this.onChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"filled-adornment-password\",\n        name: \"password\",\n        label: \"Password\",\n        fullWidth: true,\n        required: true,\n        margin: \"normal\",\n        type: this.state.showPassword ? 'text' : 'password',\n        variant: \"outlined\",\n        onChange: e => {\n          this.onChange(e);\n        },\n        InputProps: {\n          endAdornment: React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, React.createElement(IconButton, {\n            \"aria-label\": \"Toggle password visibility\",\n            onClick: this.handleClickShowPassword,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, this.state.showPassword ? React.createElement(VisibilityOff, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }) : React.createElement(Visibility, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          })))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"LogIn\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        container: true,\n        justify: \"flex-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Link, {\n        href: \"#\",\n        variant: \"body2\",\n        onClick: this.handleSignup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Don't have an account? Sign Up\")))))));\n    } else {\n      return React.createElement(SignupPage, {\n        changeStateHandler: this.changeStateHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/victorchumakov/Documents/wice-chat/ChitChat/client/src/components/Login.js"],"names":["React","Component","SignupPage","TextField","InputAdornment","IconButton","Visibility","VisibilityOff","axios","Button","CssBaseline","Link","Grid","Container","Redirect","LoginPage","constructor","props","onChange","evt","setState","error","target","name","value","handleSubmit","preventDefault","email","state","password","console","log","validateUser","handleClickShowPassword","showPassword","user","uid","post","then","res","data","localStorage","setItem","token","username","getItem","catch","handleSignup","signup","changeStateHandler","bind","render","marginTop","color","textAlign","e","endAdornment"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport SignupPage from './SignupPage'\nimport {  TextField, InputAdornment, IconButton } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport {Redirect} from \"react-router-dom\";\nclass LoginPage extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n          signup: false,\n          email:'',\n          password:'',\n          error: ''\n        }\n        this.handleSubmit=this.handleSubmit.bind(this);\n    }\n\n    onChange=(evt)=>{\n        this.setState({error:''})\n        this.setState({\n            [evt.target.name]:evt.target.value \n        })\n    }\n\n    handleSubmit= (evt)=>{\n        evt.preventDefault();\n        const email= this.state.email;\n        const password= this.state.password; \n        console.log(email,password)       \n        this.validateUser(email,password);  \n    }\n    \n    handleClickShowPassword = () =>{\n        this.setState(state=>({showPassword : !state.showPassword}));\n    }\n\n    validateUser = (email,password) => {\n        console.log(email,password)\n        const user = {\n            uid: email,\n            password:password\n          };\n        if(email && password){\n          axios.post(\"https://wise-chat.herokuapp.com/signIn\",  user )\n            .then(res => {\n              console.log(res);\n              console.log(res.data);\n              localStorage.setItem(\"username\",res.data.token.username);\n              localStorage.setItem(\"uid\",res.data.token.uid);\n              localStorage.setItem(\"name\",res.data.token.name);\n              console.log(\"Validating\",localStorage.getItem('username'));           \n              this.setState({error:''})\n            })\n            .catch(error=>{\n                this.setState({error:'Invalid credentials'})\n                console.log(error)\n            }                \n            )\n        }\n        else{\n            this.setState({error:'Fields cannot be empty'})\n            console.log(\"Empty not allowed\")\n        }\n    }\n    \n    handleSignup = () =>{\n        this.setState({signup:true})\n    }\n    changeStateHandler =()=>{\n        this.setState({error:''})\n        this.setState({signup:false})\n    }\n    render() {  \n        console.log(\"login page\")\n        if(localStorage.getItem('username')){\n            return(\n                <div>\n                    <Redirect to = \"/\"/>\n                </div>\n            )\n        }\n        else if(!this.state.signup){        \n            return( \n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <div style={{marginTop: 50}} >\n                        \n                        <h1 className=\"font\">\n                        Let's ChitChat\n                        </h1>\n                        {this.state.error && <div style={{color:'red',textAlign:'center'}}>{this.state.error}</div>} \n                        <form onSubmit={(evt)=>this.handleSubmit(evt)} >\n                        <TextField\n                            id=\"input-with-icon-adornment\" type=\"text\"\n                            variant=\"outlined\"\n                            name=\"email\"\n                            label=\"Email\"\n                            fullWidth\n                            required\n                            autoFocus\n                            margin=\"normal\"  \n                            onChange={e=>{this.onChange(e)}}                            \n                        />\n                        <TextField\n                            id=\"filled-adornment-password\" \n                            name=\"password\"\n                            label=\"Password\"\n                            fullWidth\n                            required\n                            margin=\"normal\"\n                            type={this.state.showPassword ? 'text':'password'}\n                            variant=\"outlined\"\n                            onChange={e=>{this.onChange(e)}}\n                            InputProps={{\n                                endAdornment:(\n                                    <InputAdornment  position=\"end\">\n                                        <IconButton\n                                            aria-label=\"Toggle password visibility\"\n                                            onClick={this.handleClickShowPassword}\n                                                >\n                                            {this.state.showPassword ? <VisibilityOff/> : <Visibility/>}\n                                        </IconButton>\n                                    </InputAdornment>\n                                )\n                            }}\n                        />\n                        \n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={this.handleSubmit}\n                        >\n                            LogIn\n                        </Button>\n                        <br/>\n                        <br/>\n                        <Grid container justify=\"flex-end\">\n                            <div >\n                            <Grid item >\n                            <Link href=\"#\" variant=\"body2\" onClick = {this.handleSignup}>\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                            </Grid> \n                            </div>                          \n                        </Grid>\n                        </form>\n                    </div>                    \n                    </Container>                    \n            )\n        }        \n        else{\n            return(\n                <SignupPage changeStateHandler={this.changeStateHandler}/>\n            )\n        }   \n}\n}\n\n\nexport default LoginPage"]},"metadata":{},"sourceType":"module"}